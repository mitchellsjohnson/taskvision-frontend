name: Deploy TaskVision Frontend

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev or prod)'
        required: true
        default: dev
        type: choice
        options: [dev, prod]

jobs:
  deploy-frontend:
    name: Deploy Frontend to ${{ github.event.inputs.environment || github.ref_name }}
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || github.ref_name }}
      AWS_REGION: us-east-1
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ github.workspace }}

      - name: Prepare environment file
        run: |
          if [[ "${{ env.ENVIRONMENT }}" == "prod" ]]; then
              cp .env.prod .env.local
          else
              cp .env.dev .env.local
          fi
        working-directory: ${{ github.workspace }}

      - name: Build frontend
        run: npm run build:${{ env.ENVIRONMENT }}
        working-directory: ${{ github.workspace }}

      - name: Verify build artifacts
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ github.workspace }}/infra

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="environment=${{ env.ENVIRONMENT }}"
        working-directory: ${{ github.workspace }}/infra

      - name: Export S3 bucket name from Terraform
        id: terraform-output
        run: |
          cd ${{ github.workspace }}/infra
          BUCKET_NAME=$(terraform output -raw s3_bucket_name)
          CLOUDFRONT_URL=$(terraform output -raw cloudfront_domain_name)
          if [ -z "$BUCKET_NAME" ]; then
            echo "Failed to get S3 bucket name from Terraform"
            exit 1
          fi
          echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
          echo "CLOUDFRONT_URL=$CLOUDFRONT_URL" >> $GITHUB_ENV


      - name: Upload frontend build to S3
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          aws s3 sync build/ s3://$BUCKET_NAME/ --delete
        working-directory: ${{ github.workspace }}
