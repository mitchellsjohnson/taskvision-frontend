name: Deploy TaskVision Frontend

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev or prod)'
        required: true
        default: dev
        type: choice
        options: [dev, prod]

jobs:
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || github.ref_name == 'main' && 'prod' || 'dev' }}

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || github.ref_name == 'main' && 'prod' || 'dev' }}
      AWS_REGION: us-east-1
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev eslint-plugin-prettier eslint-config-prettier prettier cross-env dotenv-cli
          npm install --include=dev

      - name: Create environment file
        run: |
          echo "REACT_APP_API_URL=${{ secrets.API_URL }}" > .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}" >> .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}" >> .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_AUTH0_CALLBACK_URL=https://${{ env.ENVIRONMENT }}.${{ secrets.DOMAIN_NAME }}/callback" >> .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_CDN=https://${{ env.ENVIRONMENT }}.${{ secrets.DOMAIN_NAME }}" >> .env.${{ env.ENVIRONMENT }}
          echo "REACT_APP_API_SERVER_URL=${{ secrets.API_URL }}" >> .env.${{ env.ENVIRONMENT }}
          echo "GENERATE_SOURCEMAP=false" >> .env.${{ env.ENVIRONMENT }}

      - name: Build frontend
        run: |
          cp .env.${{ env.ENVIRONMENT }} .env.local
          npm pkg set homepage="https://${{ env.ENVIRONMENT }}.${{ secrets.DOMAIN_NAME }}"
          npm run build:${{ env.ENVIRONMENT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync build/ "s3://${{ secrets.S3_BUCKET_NAME }}" --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*" "/index.html" "/static/*"

      - name: Verify Deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Frontend is now available at: https://${{ env.ENVIRONMENT }}.${{ secrets.DOMAIN_NAME }}"
