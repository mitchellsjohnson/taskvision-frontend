name: Deploy TaskVision Frontend

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev or prod)'
        required: true
        default: dev
        type: choice
        options: [dev, prod]

jobs:
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || github.ref_name == 'main' && 'prod' || 'dev' }}

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || github.ref_name == 'main' && 'prod' || 'dev' }}
      AWS_REGION: us-east-1
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Build frontend
        run: npm run build

      - name: Verify build artifacts
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: infra

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="subdomain=${{ env.ENVIRONMENT }}" \
            -var="domain_name=${{ secrets.DOMAIN_NAME }}" \
            -var="route53_zone_id=${{ secrets.ROUTE53_ZONE_ID }}"
        working-directory: infra

      - name: Export S3 bucket and CloudFront details
        id: terraform-output
        run: |
          cd infra
          echo "BUCKET_NAME=$(terraform output -raw s3_bucket_name)" >> $GITHUB_ENV
          echo "CLOUDFRONT_URL=$(terraform output -raw cloudfront_domain_name)" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          cp .env.${{ env.ENVIRONMENT }} .env
          echo "REACT_APP_AUTH0_CALLBACK_URL=https://${CLOUDFRONT_URL}/callback" >> .env

      - name: Upload frontend build to S3
        run: |
          aws s3 sync build/ s3://$BUCKET_NAME --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths "/*"